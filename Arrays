1.Largest element in the array
#include<bits/stdc++.h>
using namespace std;

void la(int a[], int n){
    int max=INT_MIN;
    for(int i=0; i<n; i++){
        if(max<a[i]){
            max=a[i];
        }
    }
    cout<<max;
}

int main(){
    int a[]={5,8,9,2,4,1,6};
    int n=sizeof(a)/sizeof(a[0]);
    la(a, n);
    
}
2. Check whether the array is sorted or not
#include<bits/stdc++.h>
using namespace std;

void se(int a[], int n){
    int flag=0;
    for(int i=0; i<n; i++){
        if(i==n-1){
            break;
        }
        if(a[i]>a[i+1]){
            flag=1;
            break;
        }
    }
    if(flag==1){
        cout<<"not sorted";
    }
    else{
        cout<<"sorted";
    }
}

int main(){
    int a[]={8,9,12,34,51,76};
    int n=sizeof(a)/sizeof(a[0]);
    se(a, n);
    
}
3.Remove duplicate elements
#include<bits/stdc++.h>
using namespace std;

int se(int a[], int n){
    int j=0;
    for(int i=1; i<n; i++){
        if(a[j]!=a[i]){
            j++;
            a[j]=a[i];
        }
    }
    return j;
}

int main(){
    int a[]={1,1,2,2,2,3,3,3,4,4,4,4};
    int n=sizeof(a)/sizeof(a[0]);
    int k=se(a, n);
    for(int i=0; i<=k; i++){
        cout<<a[i]<<" ";
    }
    
}
4.Left rotate array by n times
#include<bits/stdc++.h>
using namespace std;

void reverse(int a[], int i, int j){
    while(i<=j){
        int temp;
        temp=a[i];
        a[i]=a[j];
        a[j]=temp;
        i++; 
        j--;
    }
} 

void ro(int a[], int n, int k){
    
            reverse(a, 0, k-1);
            reverse(a, k, n-1);
            reverse(a, 0, n-1);
      
}

int main(){
    int a[]={1,3,4,5,7,8};
    int n=sizeof(a)/sizeof(a[0]);
    int k;
    cin>>k;
    ro(a, n, k);
    for(int i=0; i<n; i++){
        cout<<a[i];
    }
    
}
5.Move zeros to the end
#include<bits/stdc++.h>
using namespace std;

void le(int a[], int i, int n){
    int j=i;
    for(int k=i+1; k<n; k++){
        if(a[k]!=a[j]){
            int temp;
            temp=a[k];
            a[k]=a[j];
            a[j]=temp;
            j++;
        }
    }
}

int main(){
    int a[]={1,0,3,4,0,5,0,8};
    int n=sizeof(a)/sizeof(a[0]);
    int i;
    for(i=0; i<n; i++){
        if(a[i]==0){
            break;
        }
    }
    le(a, i, n);
    for(int i=0; i<n; i++){
        cout<<a[i];
    }
    
}
6.Linear search
#include<bits/stdc++.h>
using namespace std;

void le(int a[], int n, int k){
    int flag=0;
    int i;
    for(i=0; i<n; i++){
        if(a[i]==k){
            flag=1;
            break;
        }
    }
    if(flag==0){
        cout<<"element is not found";
    }
    else{
        cout<<"element is found at "<<i;
    }
}

int main(){
    int a[]={1,0,3,4,0,5,0,8};
    int n=sizeof(a)/sizeof(a[0]);
    int k;
    cin>>k;
    le(a, n, k);

}
7.Maximum consecutive ones
#include<bits/stdc++.h>
using namespace std;


int main(){
    int a[]={1, 1, 0, 1, 1, 1,0,1,1,1,1,1};
    int n=sizeof(a)/sizeof(a[0]);
    int max=INT_MIN;
    int count=1;
    for(int i=0; i<n; i++){
        if(a[i]==a[i+1]){
            count++;
        }
        else{
            if(count>=max){
                max=count;
            }
              count=1;
        }
    }
    cout<<max;
}
8.Find the number which repeat only one and other numbers twice
#include<bits/stdc++.h>
using namespace std;


int main(){
    int a[]={1,1,2,2,4,4,5};
    int n=sizeof(a)/sizeof(a[0]);
    int k=a[0];
    for(int i=1; i<n; i++){
        k=k^a[i];
    }
    cout<<k;
    
}
9.Union of two arrays
#include<bits/stdc++.h>
using namespace std;

void un(int a[], int b[], int i, int j, int n1, int n2){
	vector <int> v;
	while(i<n1 && j<n2){
		if(a[i]<b[j]){
			v.push_back(a[i]);
			i++;
		}
		else if(a[i]==b[j]){
			v.push_back(a[i]);
			i++;
			j++;
		}
	}

	while(i<n1){
		v.push_back(a[i]);
		i++;
	}

	while(j<n2){
		v.push_back(b[j]);
		j++;
	}

	for(auto x:v){
		cout<<x<<" ";
	}
}

int main(){
	int a[]={1,2,4,5,6};
	int b[]={2,4,5,7,8};
	int n1=sizeof(a)/sizeof(a[0]);
	int n2=sizeof(b)/sizeof(b[0]);

	int i=0;
	int j=0;

	un(a, b, i, j, n1, n2);
}
10.Longest subarray with the given sum

#include <bits/stdc++.h>
using namespace std;

void you(int a[], int n, int k){
    int l=0;
    int r=0;
    int sum=a[0];
    int max=INT_MIN;
    while(r<n){
        if(sum > k){
            sum-=a[l];
            l++;
        }
        if(sum==k){
            if(max<((r-l)+1)){
                max=(r-l)+1;
            }
        }
        r++;
        if(r<n){
            sum+=a[r]; 
        }
       
    }
    if(max>=0){
         cout<<max;
    }
    else{
        cout<<"no possible combination";
    }
   
}

int main()
{
    int a[]={2,3,5,9,4,1};
    int n=sizeof(a)/sizeof(a[0]);
    int k;
    cin>>k;
    
    you(a, n, k);

    return 0;
}
11.Longest subarray with the sum k(pos+neg)

#include <bits/stdc++.h>
using namespace std;

  int you(int a[],  int n, int k) 
    { 
        map<int, int> mp;
        int sum=0;
        int maxLen=0;
        
        for(int i=0; i<n; i++){
            sum+=a[i];
            if(sum==k){
                maxLen = max(maxLen, i+1);
            }
            int rem=sum-k;
            if(mp.find(rem)!=mp.end()){
                int len=i-mp[rem];
                maxLen=max(maxLen, len);
            }
            if(mp.find(sum) == mp.end()){
                mp[sum]=i;
            }
        }
        return maxLen;
    } 

int main()
{
    int a[]={-1,1,1};
    int n=sizeof(a)/sizeof(a[0]);
    int k;
    cin>>k;
    
    cout<<"Length:"<<you(a, n, k);

    return 0;
}
12.2 sum problem

#include <bits/stdc++.h>
using namespace std;

  void you(int a[],  int n, int k) 
    { 
        map <int, int> mp;
        int flag=0;
        int i;
        for(i=0; i<n; i++){
            if(mp.find(k-a[i]) !=mp.end()){
                flag=1;
                break;
            }
            mp[a[i]]=i;
        }
        if(flag==1){
            cout<<mp[k-a[i]]<<", "<<i;
        }
        else{
            cout<<"-1, -1";
        }
    } 

int main()
{
    int a[]={2,6,5,8,11};
    int n=sizeof(a)/sizeof(a[0]);
    int k;
    cin>>k;
    
    you(a, n, k);

    return 0;
}
13.n/2> element in the array

#include <bits/stdc++.h>
using namespace std;

  void you(int a[],  int n) 
    { 
        int count=0;
        int ele;
        for(int i=0; i<n; i++){
            if(count==0){
                ele=a[i];
                count=1;
            }
            else if(ele==a[i]){
                count++;
            }
            else{
                count--;
            }
        }
        cout<<ele;
    } 

int main()
{
    int a[]={2,2,1,1,1,2,2,1,1};
    int n=sizeof(a)/sizeof(a[0]);
    you(a, n);

    return 0;
}
14.maximum subarray sum

#include <bits/stdc++.h>
using namespace std;

  void you(int a[],  int n) 
    { 
        int sum=0;
        int max=INT_MIN;
        for(int i=0; i<n; i++){
            sum+=a[i];
            if(sum > max){
                max=sum;
            }
            if(sum<0){
                sum=0;
            }
            
        }
       cout<<sum;
    } 

int main()
{
    int a[]={-2,1,-3,4,-1,2,1,-5,4};
    int n=sizeof(a)/sizeof(a[0]);
    you(a, n);

    return 0;
}
15.Stock buy and sell 

#include <bits/stdc++.h>
using namespace std;

  void you(int a[],  int n) { 
      int mini=a[0];
      int maxi=0;
      int cost;
      for(int i=0; i<n; i++){
          cost=a[i]-mini;
          maxi=max(maxi, cost);
          mini=min(mini, a[i]);
      }
      cout<<maxi;
  }

int main()
{
    int a[]={7,1,5,3,6,4};
    int n=sizeof(a)/sizeof(a[0]);
    you(a, n);
    
    return 0;
}
16.Rearrange elements by sign

#include <bits/stdc++.h>
using namespace std;

  void you(int a[],  int n) { 
      int b[n];
      int pos=0;
      int neg=1;
      for(int i=0; i<n; i++){
          if(a[i]>0){
             b[pos]=a[i];
             pos=pos+2;
          }
          else{
              b[neg]=a[i];
              neg=neg+2;
          }  
      }
      for(int r=0; r<n; r++){
          cout<<b[r]<<" ";
      }
  }

int main()
{
    int a[]={1,3,4,5,-1,-2,-3,-4};
    int n=sizeof(a)/sizeof(a[0]);
    you(a, n);
    return 0;
}
17.Leaders in the array

#include <bits/stdc++.h>
using namespace std;

  void you(int a[],  int n) { 
      vector<int> v;
      int maxi=INT_MIN;
      for(int i=n-1; i>=0; i--){
          if(a[i]>maxi){
              v.insert(v.begin(), a[i]);
          }
          maxi=max(maxi, a[i]);
      }
      
      for(auto x:v){
          cout<<x<<" ";
      }
  }

int main()
{
    int a[]={10, 52, 12, 3, 44, 6};
    int n=sizeof(a)/sizeof(a[0]);
    you(a, n);
    return 0;
}
18.Sort 0,1,2
#include <bits/stdc++.h>
using namespace std;

void io(int a[], int n){
    int low=0;
    int mid=0;
    int high=n-1;
     while(mid<=high){
        if(a[mid]==0){
            swap(a[mid], a[low]);
            low++;
            mid++;
        }
        else if(a[mid]==1){
            mid++;
        }
        else{
            swap(a[mid], a[high]);
            high--;
        }
    }
}
int main()
{
    int a[]={2,0,2,1,1,0};
    int n=sizeof(a)/sizeof(a[0]);
    io(a, n);
    for(int i=0; i<n; i++){
        cout<<a[i]<<" ";
    }
    return 0;
}

