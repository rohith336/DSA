#Sorting 
1.selection sort
IN descending order
#include<bits/stdc++.h>
using namespace std;

void selc(int a[], int n){
    int max;
    for(int i=0; i<n-1; i++){
         max=i;
        for(int j=i+1; j<n; j++){
            if(a[max]<a[j]){
                max=j;
            }
        }
        int temp;
        temp=a[max];
        a[max]=a[i];
        a[i]=temp;
    }
}

int main(){
    int a[]={4,8,9,2,3};
    int n=sizeof(a)/sizeof(a[0]);
    selc(a, n);
    for(int i=0; i<n; i++){
        cout<<a[i]<<" ";
    }
}

2.Bubble sort
#include<bits/stdc++.h>
using namespace std;

void bubb(int a[], int n){
    for(int i=n-1; i>1; i--){
        for(int j=0; j<i; j++){
            if(a[j]<a[j+1]){
                int temp;
                temp=a[j];
                a[j]=a[j+1];
                a[j+1]=temp;
            }
        }
    }
}

int main(){
    int a[]={5,8,9,2,3,7,1,4};
    int n=sizeof(a)/sizeof(a[0]);
    bubb(a, n);
    for(int i=0; i<n; i++){
        cout<<a[i]<<" ";
    }
}

3.Insertion sort
#include<bits/stdc++.h>
using namespace std;

void ins(int a[], int n){
  for(int i=1; i<n; i++){
      int c=a[i];
    while(c>a[i-1] && i!=0){
        a[i]=a[i-1];
        i--;
    }  
    a[i]=c;
  }
}

int main(){
    int a[]={5,8,9,2,4,1,6};
    int n=sizeof(a)/sizeof(a[0]);
    ins(a, n);
    for(int i=0; i<n; i++){
        cout<<a[i]<<" ";
    }
}

4.Merge sort 
#include<bits/stdc++.h>
using namespace std;

void merge_sort(int a[], int low, int mid, int high){
    int i=low;
    int j=mid+1;
    vector<int> v;
    while(i<=mid && j<=high){
        if(a[i]<=a[j]){
            v.push_back(a[i]);
            i++;
        }
        else{
            v.push_back(a[j]);
            j++;
        }
    }
    
    while(i<=mid){
        v.push_back(a[i]);
            i++;
    }
    
     while(j<=high){
         v.push_back(a[j]);
            j++;
    }
     for (int i = low; i <= high; i++) {
        a[i] = v[i - low];
    }
}

void merge(int a[], int low, int high){
    if(low>=high){
        return;
    }
    int mid=(low+high)/2;
    merge(a, low, mid);
    merge(a, mid+1, high);
    merge_sort(a, low, mid, high);
}

int main(){
    int a[]={3,2,5,4,7,8,1};
    int n=sizeof(a)/sizeof(a[0]);
    int low=0;
    int high=n-1;
    merge(a, low, high);
    for(int i=0; i<n; i++){
        cout<<a[i]<<" ";
    }
}
5.Quick sort

#include <bits/stdc++.h>
using namespace std;


void io(int a[], int n, int low, int high){
    if(low>=high){
        return;
    }
    int pivot=a[low];
    int i=low;
    int j=high;
    while(i<j){
        while(a[i]<=pivot && i<=high-1){
            i++;
            continue;
        }
        while(a[j]>pivot && j>=low+1){
            j--;
            continue;
        }
        if(i<j){
           int temp=a[i];
          a[i]=a[j];
          a[j]=temp; 
        }
        
    }
    int temp=a[j];
    a[j]=a[low];
    a[low]=temp;
    io(a, n, low, j-1);
    io(a, n, j+1, high);
}

int main()
{
    int a[]={4,6,2,5,7,9,1,3};
    int n=sizeof(a)/sizeof(a[0]);
    int low=0;
    int high=n-1;
    io(a, n, low, high);
    
    for(int i=0; i<n; i++){
        cout<<a[i]<<" ";
    }
    return 0;
}



