1.Print all subsequences
class Solution {

    void sub(vector<int> &a, vector<int> &ans, vector<int> &v, int ind){
        
        if(ind==a.size()){
            ans.push_back(v);
            return;
        }
        
        v.push_back(a[ind]);
        sub(a, ans, v, ind+1);
        v.pop_back();
        sub(a, ans, v, ind+1);
    }

public:
    vector<vector<int>> subsets(vector<int>& a) {
        int n=a.size();
        vector<vector<int>> ans;
        vector<int> v;
        int ind=0;
        sub(a, ans, v, ind);
        return ans;
    }
};
2.Print only one subsequence which is equal to k
#include <bits/stdc++.h>
using namespace std;

bool sub(vector<int> &a, vector<int> &v, int k, int sum, int ind){
    if(ind==a.size()){
        if(sum==k){
            for(auto x:v){
                cout<<x<<" ";
            }
            return true;
        }
        return false;
    }
    
    sum+=a[ind];
    v.push_back(a[ind]);
    if(sub(a, v, k, sum, ind+1) == true){
        return true;
    }
    sum-=a[ind];
    v.pop_back();
    if(sub(a, v, k, sum, ind+1) == true){
        return true;
    }
    return false;
    
}

int main()
{
    vector<int> a = {1,2,1};
    int k=2;
    vector<int> v;
    int sum=0;
    int ind=0;
    sub(a, v, k, sum, ind);

    return 0;
}
3.
